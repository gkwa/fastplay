name: Build & Test
"on":
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
jobs:
  test:
    name: Build & Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@3b9b8c884f6b4bb4d5be2779c26374abadae0871
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: lts/*
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.5.0
      - name: Get Playwright version
        id: playwright-version
        shell: bash
        run: |
          PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies?.['@playwright/test'] || require('./package.json').dependencies?.['@playwright/test'] || '')")
          if [ -n "$PLAYWRIGHT_VERSION" ]; then
            echo "version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Error: @playwright/test not found in package.json"
            exit 1
          fi
      - name: Set cache path
        id: cache-path
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "CACHE_PATH=C:/Users/runneradmin/AppData/Local/ms-playwright" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "CACHE_PATH=~/Library/Caches/ms-playwright" >> $GITHUB_OUTPUT
          else
            echo "CACHE_PATH=~/.cache/ms-playwright" >> $GITHUB_OUTPUT
          fi
      - name: Cache playwright browsers
        id: browsers-cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: ${{ steps.cache-path.outputs.CACHE_PATH }}
          key: ${{ runner.os }}-browsers-${{ steps.playwright-version.outputs.version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-browsers-${{ steps.playwright-version.outputs.version }}-
            ${{ runner.os }}-browsers-
      - name: Install dependencies
        run: pnpm install
      - name: Install Playwright Browsers
        if: steps.browsers-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      - name: Check browser age and update if needed
        shell: bash
        run: |
          if [ -d "${{ steps.cache-path.outputs.CACHE_PATH }}" ]; then
            CACHE_AGE=$(find "${{ steps.cache-path.outputs.CACHE_PATH }}" -type f -name "*.json" -mtime +30 2>/dev/null | wc -l)
            if [ "$CACHE_AGE" -gt 0 ]; then
              pnpm exec playwright install --with-deps
            fi
          fi
      - name: Run Playwright tests
        run: pnpm exec playwright test
      - uses: actions/upload-artifact@184d73b71b93c222403b2e7f1ffebe4508014249
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-${{ matrix.os }}-${{ github.run_id }}
          path: playwright-report/
          retention-days: 30
